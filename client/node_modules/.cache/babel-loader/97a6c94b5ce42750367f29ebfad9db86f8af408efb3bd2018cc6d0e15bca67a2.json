{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meliu\\\\OneDrive\\\\Documents\\\\reactjs\\\\todolist\\\\client\\\\src\\\\components\\\\ListItem.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport TickIcon from './TickIcon';\nimport ProgressBar from './ProgressBar';\nimport Modal from './Modal';\nimport ListItem from './ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    // Mengambil data tasks dari API atau sumber data lainnya\n    // dan menyimpannya ke state tasks\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Menyaring tugas berdasarkan kondisi yang dipilih\n    filterTasks();\n  }, [tasks, filter]);\n  const fetchData = async () => {\n    // Mengambil data tasks dari API atau sumber data lainnya\n    // dan menyimpannya ke state tasks\n    try {\n      const response = await fetch('http://localhost:8000/todos');\n      const data = await response.json();\n      setTasks(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const filterTasks = () => {\n    // Menyaring tugas berdasarkan kondisi yang dipilih\n    if (filter === 'progress') {\n      setFilteredTasks(tasks.filter(task => task.condition === 'progress'));\n    } else if (filter === 'completed') {\n      setFilteredTasks(tasks.filter(task => task.condition === 'completed'));\n    } else {\n      setFilteredTasks(tasks);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFilter('progress'),\n      children: \"Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFilter('completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        task: task,\n        getData: fetchData\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"CgDjhuGrvEx1VGBMlH49LnE3PxE=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useEffect","moment","TickIcon","ProgressBar","Modal","ListItem","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","fetchData","filterTasks","response","fetch","data","json","err","console","log","task","condition","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","getData","id","_c","$RefreshReg$"],"sources":["C:/Users/meliu/OneDrive/Documents/reactjs/todolist/client/src/components/ListItem.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport TickIcon from './TickIcon';\nimport ProgressBar from './ProgressBar';\nimport Modal from './Modal';\nimport ListItem from './ListItem';\n\nconst TodoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    // Mengambil data tasks dari API atau sumber data lainnya\n    // dan menyimpannya ke state tasks\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Menyaring tugas berdasarkan kondisi yang dipilih\n    filterTasks();\n  }, [tasks, filter]);\n\n  const fetchData = async () => {\n    // Mengambil data tasks dari API atau sumber data lainnya\n    // dan menyimpannya ke state tasks\n    try {\n      const response = await fetch('http://localhost:8000/todos');\n      const data = await response.json();\n      setTasks(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const filterTasks = () => {\n    // Menyaring tugas berdasarkan kondisi yang dipilih\n    if (filter === 'progress') {\n      setFilteredTasks(tasks.filter(task => task.condition === 'progress'));\n    } else if (filter === 'completed') {\n      setFilteredTasks(tasks.filter(task => task.condition === 'completed'));\n    } else {\n      setFilteredTasks(tasks);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => setFilter('progress')}>Progress</button>\n      <button onClick={() => setFilter('completed')}>Completed</button>\n      <ul>\n        {filteredTasks.map(task => (\n          <ListItem key={task.id} task={task} getData={fetchData} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}